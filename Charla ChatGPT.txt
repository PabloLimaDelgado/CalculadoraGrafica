User
Dame una calculadora con la logica de la suma,resta,division y multiplicacion y que sea en una interfaz grafica en Java.

ChatGPT
¡Claro! Te puedo proporcionar un ejemplo básico de una calculadora con suma, resta, división y multiplicación en una interfaz gráfica en Java utilizando Swing. Aquí tienes un código de ejemplo:

java
Copy code
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class Calculadora extends JFrame implements ActionListener {
    private JTextField textField;
    private JButton[] numberButtons = new JButton[10];
    private JButton[] functionButtons = new JButton[4];
    private JButton addButton, subButton, mulButton, divButton, decButton, equButton, delButton, clrButton;
    private JPanel panel;

    private double num1 = 0, num2 = 0, result = 0;
    private char operator;

    public Calculadora() {
        setTitle("Calculadora");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setSize(400, 400);
        setLocationRelativeTo(null);

        panel = new JPanel();
        panel.setLayout(new GridLayout(4, 4));

        textField = new JTextField();
        textField.setHorizontalAlignment(JTextField.RIGHT);
        textField.setEditable(false);

        addButton = new JButton("+");
        subButton = new JButton("-");
        mulButton = new JButton("*");
        divButton = new JButton("/");
        decButton = new JButton(".");
        equButton = new JButton("=");
        delButton = new JButton("Delete");
        clrButton = new JButton("Clear");

        functionButtons[0] = addButton;
        functionButtons[1] = subButton;
        functionButtons[2] = mulButton;
        functionButtons[3] = divButton;

        for (int i = 0; i < 4; i++) {
            functionButtons[i].addActionListener(this);
            functionButtons[i].setFont(new Font("Arial", Font.PLAIN, 18));
            functionButtons[i].setBackground(Color.GRAY);
            functionButtons[i].setForeground(Color.WHITE);
        }

        for (int i = 0; i < 10; i++) {
            numberButtons[i] = new JButton(String.valueOf(i));
            numberButtons[i].addActionListener(this);
            numberButtons[i].setFont(new Font("Arial", Font.PLAIN, 18));
        }

        decButton.addActionListener(this);
        equButton.addActionListener(this);
        delButton.addActionListener(this);
        clrButton.addActionListener(this);

        panel.add(delButton);
        panel.add(clrButton);
        panel.add(divButton);
        panel.add(mulButton);
        panel.add(numberButtons[7]);
        panel.add(numberButtons[8]);
        panel.add(numberButtons[9]);
        panel.add(subButton);
        panel.add(numberButtons[4]);
        panel.add(numberButtons[5]);
        panel.add(numberButtons[6]);
        panel.add(addButton);
        panel.add(numberButtons[1]);
        panel.add(numberButtons[2]);
        panel.add(numberButtons[3]);
        panel.add(decButton);
        panel.add(numberButtons[0]);
        panel.add(equButton);

        add(textField, BorderLayout.NORTH);
        add(panel);

        setVisible(true);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        for (int i = 0; i < 10; i++) {
            if (e.getSource() == numberButtons[i]) {
                textField.setText(textField.getText().concat(String.valueOf(i)));
            }
        }
        if (e.getSource() == decButton) {
            textField.setText(textField.getText().concat("."));
        }
        if (e.getSource() == addButton) {
            num1 = Double.parseDouble(textField.getText());
            operator = '+';
            textField.setText("");
        }
        if (e.getSource() == subButton) {
            num1 = Double.parseDouble(textField.getText());
            operator = '-';
            textField.setText("");
        }
        if (e.getSource() == mulButton) {
            num1 = Double.parseDouble(textField.getText());
            operator = '*';
            textField.setText("");
        }
        if (e.getSource() == divButton) {
            num1 = Double.parseDouble(textField.getText());
            operator = '/';
            textField.setText("");
        }
        if (e.getSource() == equButton) {
            num2 = Double.parseDouble(textField.getText());

            switch (operator) {
                case '+':
                    result = num1 + num2;
                    break;
                case '-':
                    result = num1 - num2;
                    break;
                case '*':
                    result = num1 * num2;
                    break;
                case '/':
                    result = num1 / num2;
                    break;
            }

            textField.setText(String.valueOf(result));
            num1 = result;
        }
        if (e.getSource() == clrButton) {
            textField.setText("");
        }
        if (e.getSource() == delButton) {
            String string = textField.getText();
            textField.setText("");
            for (int i = 0; i < string.length() - 1; i++) {
                textField.setText(textField.getText() + string.charAt(i));
            }
        }
    }

    public static void main(String[] args) {
        new Calculadora();
    }
}
Este código crea una calculadora simple con una interfaz gráfica en Java utilizando la biblioteca Swing. Ofrece operaciones de suma, resta, multiplicación y división, junto con la capacidad de eliminar y borrar la entrada. Puedes ejecutar este código en un entorno de desarrollo Java estándar.

User
Esta mal distribucion de los botones, corregime esas lineas de codigo

ChatGPT
Por supuesto, podemos organizar los botones de manera más conveniente. Vamos a reorganizar las líneas de código en el método Calculadora() para tener una distribución más intuitiva de los botones en la interfaz gráfica. Aquí está la versión actualizada del método Calculadora():

java
Copy code
public Calculadora() {
    setTitle("Calculadora");
    setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    setSize(300, 400);
    setLocationRelativeTo(null);

    panel = new JPanel();
    panel.setLayout(new GridLayout(5, 4, 5, 5));

    textField = new JTextField();
    textField.setHorizontalAlignment(JTextField.RIGHT);
    textField.setEditable(false);

    addButton = new JButton("+");
    subButton = new JButton("-");
    mulButton = new JButton("*");
    divButton = new JButton("/");
    decButton = new JButton(".");
    equButton = new JButton("=");
    delButton = new JButton("Delete");
    clrButton = new JButton("Clear");

    functionButtons[0] = addButton;
    functionButtons[1] = subButton;
    functionButtons[2] = mulButton;
    functionButtons[3] = divButton;

    for (int i = 0; i < 4; i++) {
        functionButtons[i].addActionListener(this);
        functionButtons[i].setFont(new Font("Arial", Font.PLAIN, 18));
        functionButtons[i].setBackground(Color.GRAY);
        functionButtons[i].setForeground(Color.WHITE);
    }

    for (int i = 0; i < 10; i++) {
        numberButtons[i] = new JButton(String.valueOf(i));
        numberButtons[i].addActionListener(this);
        numberButtons[i].setFont(new Font("Arial", Font.PLAIN, 18));
    }

    decButton.addActionListener(this);
    equButton.addActionListener(this);
    delButton.addActionListener(this);
    clrButton.addActionListener(this);

    panel.add(delButton);
    panel.add(clrButton);
    panel.add(divButton);
    panel.add(numberButtons[7]);
    panel.add(numberButtons[8]);
    panel.add(numberButtons[9]);
    panel.add(mulButton);
    panel.add(numberButtons[4]);
    panel.add(numberButtons[5]);
    panel.add(numberButtons[6]);
    panel.add(subButton);
    panel.add(numberButtons[1]);
    panel.add(numberButtons[2]);
    panel.add(numberButtons[3]);
    panel.add(addButton);
    panel.add(decButton);
    panel.add(numberButtons[0]);
    panel.add(equButton);

    add(textField, BorderLayout.NORTH);
    add(panel);

    setVisible(true);
}
En este código, he ajustado el tamaño de la ventana a 300x400 para adaptarse mejor a la distribución de los botones. Además, he organizado los botones en una cuadrícula de 5x4 para una disposición más lógica. Ahora los botones están agrupados de manera más coherente según sus funciones.